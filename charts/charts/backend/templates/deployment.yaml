apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "backend.fullname" . }}
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: init-script
          configMap:
            name: {{ .Release.Name }}-init-script
            defaultMode: 0755
      #securityContext:
      #  fsGroup: 200
      containers:
        - name: todobackend
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.todoapp.listenPort | default "8080" }}
              name: http
          env:
            - name: listenPort
              value: "{{ .Values.todoapp.listenPort | default "8080" }}"
            - name: storage
              value: "{{ .Values.todoapp.storage | default "/data/todoapp.db" }}"
          resources:
            {{- toYaml .Values.todoapp.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30